name: Deploy CDK
on:
  workflow_run:
    workflows: ["Tests"]
    branches: [main]
    types: 
      - completed
jobs:
  deploy:
    permissions:
      # Default permissions
      contents: read
      packages: read

      deployments: write
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: chrnorm/deployment-action@v2
      name: Create GitHub deployment
      id: deployment
      with:
        token: '${{ github.token }}'
        environment-url: http://scarescale.com
        environment: production

    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: |
        npm ci
        npm --prefix infrastructure install

    - name: Run Build
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "eu-west-1"
    
    - name: setup git config
      run: |
        git config user.name "GitHub Release Bot"
        git config user.email "<>"

    - name: Run release
      run: npm run release --ci

    - name: Run deploy
      run: npm run cdk-deploy

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@v2
      with:
        token: '${{ github.token }}'
        environment-url: ${{ steps.deployment.outputs.environment_url }}
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
        state: 'success'

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@v2
      with:
        token: '${{ github.token }}'
        environment-url: ${{ steps.deployment.outputs.environment_url }}
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
        state: 'failure'