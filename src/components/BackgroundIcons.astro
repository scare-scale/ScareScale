---
import creepySvg from '/icons/categories/creepy.svg?raw';
import goreSvg from '/icons/categories/gore.svg?raw';
import jumpscaresSvg from '/icons/categories/jumpscares.svg?raw';
import psychologicalSvg from '/icons/categories/psychological.svg?raw';
import suspenseSvg from '/icons/categories/suspense.svg?raw';

const rawIcons = [creepySvg, goreSvg, jumpscaresSvg, psychologicalSvg, suspenseSvg];

const icons = rawIcons.map(svg => {
  return svg.replace(/width="[^"]*"/g, '')
            .replace(/height="[^"]*"/g, '')
            .replace(/fill="[^"]*"/g, 'fill="red"')
            .replace(/stroke="[^"]*"/g, 'stroke="red"')
            .replace(/fill:#[^;]*;/g, 'fill:red;')
            .replace(/stroke:#[^;]*;/g, 'stroke:red;')
            .replace(/<svg([^>]*)>/, '<svg$1 width="80" height="80">');
});

const numIcons = 10;
const positions: {x: number, y: number}[] = [];
const viewportWidth = 1920; // assume desktop
const viewportHeight = 1080;

for (let i = 0; i < numIcons; i++) {
  let x: number, y: number, attempts = 0;
  do {
    x = Math.random() * (viewportWidth - 150);
    y = Math.random() * (viewportHeight - 150);
    attempts++;
    if (attempts > 100) break;
  } while (positions.some(p => Math.sqrt((p.x - x) ** 2 + (p.y - y) ** 2) < 200));
  positions.push({ x, y });
}

const numPerIcon = numIcons / rawIcons.length;

const iconList: string[] = [];
for (let i = 0; i < numPerIcon; i++) {
  iconList.push(...icons);
}
---

<div class="fixed inset-0 z-10 pointer-events-none">
  {positions.map((pos, i) => {
    const icon = iconList[i];
    const opacity = 0.07;
    return (
      <div style={`position:absolute;left:${pos.x}px;top:${pos.y}px;opacity:${opacity}`}>
        <div set:html={icon}></div>
      </div>
    );
  })}
</div>
