---
import { getCollection, z, defineCollection } from "astro:content";
import Prose from "../../components/Prose.astro";
import MainLayout from "../../layouts/MainLayout.astro";

const schema = {
  name: z.string(),
  tmdbId: z.date(),
  tmdbPosterId: z.string(),
  scareScaleRating: z.number(),
  categoryRatings: z.object({
    gore: z.number(),
    jumpscares: z.number(),
    suspense: z.number(),
  }),
};

defineCollection({
  schema: z.object(schema),
});

export async function getStaticPaths() {
  const entries = await getCollection("movie");
  return entries.map(
    (entry: { slug: any; data: typeof schema; render: Function }) => ({
      params: { slug: entry.slug },
      props: { entry },
    })
  );
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const posterUrl = `https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${entry.data.tmdbPosterId}.jpg`;
---

<MainLayout>
  <div class="flex flex-col items-center">

  <section class="flex flex-col gap-y-10 pt-6">
    <nav aria-label="Breadcrumb">
      <ol
        role="list"
        class="mx-auto flex max-w-2xl items-center space-x-2 px-4 sm:px-6 lg:max-w-7xl lg:px-8"
      >
        <li>
          <div class="flex items-center">
            <a
              href="/"
              class="mr-2 text-sm font-medium text-white hover:text-gray-300"
              >Movie</a
            >
            <svg
              width="16"
              height="20"
              viewBox="0 0 16 20"
              fill="currentColor"
              aria-hidden="true"
              class="h-5 w-4 text-white"
            >
              <path d="M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z"></path>
            </svg>
          </div>
        </li>

        <li class="text-sm">
          <a href="#" aria-current="page" class="font-medium text-white"
            >{entry.data.name}</a
          >
        </li>
      </ol>
    </nav>

    <div
      class="place-items-center max-w-2xl px-6 grid grid-cols-1 lg:max-w-7xl lg:grid-cols-3 lg:gap-x-8 lg:px-8"
    >
      <img
        src={posterUrl}
        alt={`${entry.data.name} movie poster`}
        class="size-full rounded-lg object-cover"
      />

      <div
        class="py-10 lg:border-l lg:border-gray-200 lg:pt-6 lg:pl-8 lg:pb-16 lg:col-span-2"
      >
        <h1 class="text-2xl font-bold tracking-tight text-white sm:text-3xl">
          {entry.data.name}
        </h1>
        <div class="mt-5">
          <Prose>
            <Content />
          </Prose>
        </div>
        <h5 class="text-xl mt-5 font-medium text-white">Ratings</h5>
        <div class="grid grid-cols-2 gap-4">
          <ul role="list" class="divide-y divide-gray-100">
            {
              entry.data.categoryRatings ? (
                Object.entries(entry.data.categoryRatings).map(
                  ([categoryName, score]) => {
                    return (
                      <li class="flex justify-between gap-x-6 py-5">
                        <div class="flex min-w-0 gap-x-4">
                          <img
                            class="w-6 h-6 flex-none"
                            src={`/icons/categories/${categoryName}.svg`}
                            alt=" "
                          />
                          <h1 class="text-sm/1 font-bold text-white">
                            {categoryName}
                          </h1>
                        </div>
                        <div class="hidden shrink-0 sm:flex sm:flex-col sm:items-end">
                          <p class="text-sm/1 text-white">{score} / 10</p>
                        </div>
                      </li>
                    );
                  }
                )
              ) : (
                <h5 class="text-l m-5 font-medium text-white">
                  Ratings not found
                </h5>
              )
            }
          </ul>

          <div class="w-full max-w-sm rounded-lg shadow-sm bg-gray-800">
            <div class="flex flex-col items-center p-4">
              <h5 class="text-xl mb-2 font-medium text-white">Scare Scale</h5>

              <div
                class="w-20 h-20 mb-2 rounded-full shadow-lg border-2 border-white flex justify-center items-center"
              >
                <h5 class="text-xl font-medium text-white">
                  {entry.data.scareScaleRating} / 10
                </h5>
              </div>

              <h5 class="text-xl font-medium text-white">Terrifying</h5>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>
</MainLayout>
