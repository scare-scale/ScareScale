---
import Prose from "../../components/Prose.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import { SEO } from "astro-seo";
import { Image } from "astro:assets";
import { movies } from "../../lib/movies";
import ScareScaleRating from "../../components/cards/ScareScaleRating.astro";
import Breadcrumbs from "../../components/nav/Breadcrumbs.astro";
import RatingsUnavailable from "../../components/cards/RatingsUnavailable.astro";
import Review from "../../components/cards/Review.astro";
import MovieControlBar from "../../components/cards/MovieControlBar.astro";
import MoviesGrid, { Sort } from "../../components/grids/MoviesGrid.astro";

export async function getStaticPaths() {
  return movies.getAll().map((movie) => ({
    params: { slug: movie.slug },
    props: { movie },
  }));
}

const { movie } = Astro.props;
const review = movie.getPriorityReview();
---

<head>
  <meta charset="UTF-8" />
  <SEO
    title={`${movie.name} (${movie.releaseYear}) Review & Scare Scale Rating`}
    description={`Is ${movie.name} scary? Our Scare Scale gives it a fear rating of ${Math.round(review.overallRating)}/10. Explore the full horror review and discover where it ranks among the scariest movies.`}
    canonical={`https://scarescale.com/movie/${movie.slug}`}
    noindex={review.overallRating == 0}
    openGraph={{
      basic: {
        type: "website",
        url: `https://scarescale.com/movie/${movie.slug}`,
        title: `${movie.name} Horror Review & Scare Scale Rating`,
        image: movie.posterUrl,
      },
      optional: {
        description: `${movie.name} scored ${review.overallRating}/10 on the Scare Scale. Find out what makes it terrifying or not and see how it compares to other horror films.`,
      },
    }}
  />
</head>

<MainLayout backdropUrl={movie.backdropUrl}>
  <section class="relative flex flex-col" id="movieDetails">
    <div class="relative flex flex-col gap-y-8 pt-6">
      <div class="px-6 lg:px-8">
        <Breadcrumbs movie={movie} />
      </div>

      <div class="max-w-7xl mx-auto px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 lg:gap-12 items-start">
          <!-- Movie Poster -->
          <div class="flex justify-center lg:justify-start">
            <div class="relative group max-w-xs lg:max-w-sm">
              <Image
                src={movie.posterUrl}
                alt={`${movie.name} movie poster`}
                width={300}
                height={450}
                class="w-full rounded-xl object-cover shadow-2xl group-hover:shadow-red-500/20 transition-shadow duration-300"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            </div>
          </div>

          <!-- Movie Details -->
          <div class="lg:col-span-2 space-y-6">
            <div>
              <h1 class="text-3xl font-bold tracking-tight text-white sm:text-4xl lg:text-5xl leading-tight mb-3">
                {movie.name}
              </h1>
              <div class="flex items-center gap-2 text-gray-400 mb-6">
                <span class="text-lg">üìÖ</span>
                <span class="text-base font-medium">{movie.releaseDateText}</span>
              </div>
            </div>

            <div class="bg-gray-800/30 backdrop-blur-sm rounded-lg p-6 border border-gray-700/30">
              <Prose>
                {movie.synopsis && <p class="text-gray-200 leading-relaxed">{movie.synopsis}</p>}
              </Prose>
            </div>

            <div class="pt-2">
              {
                review.overallRating > 0 ? (
                  <ScareScaleRating review={review} />
                ) : (
                  movie.isReleased && <RatingsUnavailable movie={movie} />
                )
              }
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Reviews Section -->
    {(movie.reviews.length > 1 || review.content) && (
      <div class="max-w-7xl mx-auto px-6 lg:px-8 pt-12">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8">
          {movie.reviews.map((review) => <Review review={review} />)}
        </div>
      </div>
    )}

    <!-- Add Review Button -->
    {review.overallRating > 0 && (
      <div class="max-w-7xl mx-auto px-6 lg:px-8 pt-8">
        <div class="flex justify-center lg:justify-end">
          <a
            href={`/movie/${movie.slug}/review`}
            class="inline-flex items-center gap-2 px-6 py-3 border border-transparent text-sm font-semibold rounded-lg shadow-lg text-white bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-200 hover:scale-105"
          >
            <span>‚úçÔ∏è</span>
            Add Review
          </a>
        </div>
      </div>
    )}

    <!-- Movie Control Bar -->
    <div class="pt-8">
      <MovieControlBar movie={movie} />
    </div>

    <!-- Similar Movies Section -->
    <div class="max-w-7xl mx-auto px-6 lg:px-8 pt-16 pb-8">
      <div class="text-center mb-10">
        <h2 class="text-3xl font-bold tracking-tight text-white sm:text-4xl mb-4">
          More Movies Like This
        </h2>
        <div class="w-32 h-1 bg-gradient-to-r from-red-600 to-red-400 mx-auto rounded-full"></div>
      </div>
      <MoviesGrid
        sort={Sort.HighestToLowestScore}
        similar={movie}
        maxCount={10}
      />
    </div>
  </section>
</MainLayout>
