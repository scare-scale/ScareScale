---
import Prose from "../../components/Prose.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import { SEO } from "astro-seo";
import { Image } from "astro:assets";
import { allMovies } from "../../content.config";
import ScareScaleRating from "../../components/cards/ScareScaleRating.astro";
import Breadcrumbs from "../../components/nav/Breadcrumbs.astro";
import RatingsUnavailable from "../../components/cards/RatingsUnavailable.astro";
import Review from "../../components/cards/Review.astro";
import MovieControlBar from "../../components/cards/MovieControlBar.astro";
import MoviesGrid, { Sort } from "../../components/grids/MoviesGrid.astro";

export async function getStaticPaths() {
  return allMovies.getAll().map((movie) => ({
    params: { slug: movie.slug },
    props: { movie },
  }));
}

const { movie } = Astro.props;
const review = movie.getPriorityReview();
---

<head>
  <meta charset="UTF-8" />
  <SEO
    title={`${movie.name} (${movie.releaseYear}) Review & Scare Scale Rating`}
    description={`Is ${movie.name} scary? Our Scare Scale gives it a fear rating of ${Math.round(review.overallRating)}/10. Explore the full horror review and discover where it ranks among the scariest movies.`}
    canonical={`https://scarescale.com/movie/${movie.slug}`}
    noindex={review.overallRating == 0}
    openGraph={{
      basic: {
        type: "website",
        url: `https://scarescale.com/movie/${movie.slug}`,
        title: `${movie.name} Horror Review & Scare Scale Rating`,
        image: movie.posterUrl,
      },
      optional: {
        description: `${movie.name} scored ${review.overallRating}/10 on the Scare Scale. Find out what makes it terrifying or not and see how it compares to other horror films.`,
      },
    }}
  />
</head>

<MainLayout backdropUrl={movie.backdropUrl}>
  <section class="relative flex flex-col items-center" id="movieDetails">
    <div class="relative flex flex-col gap-y-10 pt-6">
      <Breadcrumbs movie={movie} />
      <div
        class="place-items-center max-w-2xl px-6 grid grid-cols-1 lg:max-w-7xl lg:grid-cols-3 lg:gap-x-8 lg:px-8"
      >
        <Image
          src={movie.posterUrl}
          alt={`${movie.name} movie poster`}
          width={300}
          height={450}
          class="size-full size-2/3 rounded-lg object-cover"
        />
        <div
          class="py-4 lg:border-l lg:border-gray-200 lg:pt-6 lg:pl-8 lg:col-span-2"
        >
          <h1 class="text-2xl font-bold tracking-tight text-white sm:text-3xl">
            {movie.name}
          </h1>
          <h1 class="text-sm tracking-tight text-white">
            {`Release Date: ${movie.releaseDateText}`}
          </h1>
          <div class="mt-5">
            <Prose>
              {movie.synopsis && <p>{movie.synopsis}</p>}
            </Prose>
          </div>
          {
            review.overallRating > 0 ? (
              <ScareScaleRating review={review} />
            ) : (
              movie.isReleased && <RatingsUnavailable movie={movie} />
            )
          }
        </div>
      </div>
    </div>
    {(movie.reviews.length > 1 || review.content) &&
    <div class="place-items-center max-w-2xl lg:max-w-7xl px-6 lg:px-8 pt-6">
      <div class="grid grid-flow-col gap-6 justify-center">
        {movie.reviews.map((review) => <Review review={review} />)}
      </div>
    </div>
    }
    <MovieControlBar movie={movie} />
    <div class="place-items-center max-w-2xl lg:max-w-7xl px-6 lg:px-8 pt-6">
      <h2 class="text-2xl font-bold tracking-tight text-white sm:text-3xl mb-6">
        More Movies Like This
      </h2>
      <MoviesGrid
        sort={Sort.HighestToLowestScore}
        similar={movie}
        maxCount={10}
      />
    </div>
  </section>
</MainLayout>
